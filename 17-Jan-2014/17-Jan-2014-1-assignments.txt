1.	Which digits, and in what order, will be printed when the following program is run?
	public class D2DASMT_712
	{
		public static void main(String[] args)
		{
			int k=0;
			try
			{
				int i = 5/k;
			}
			catch (ArithmeticException e)
			{
				System.out.println("1");
			}
			catch (RuntimeException e)
			{
				System.out.println("2");
				return;
			}
			catch (Exception e)
			{
				System.out.println("3");
			}
			finally
			{
				System.out.println("4");
			}
			System.out.println("5");
		}
	}
	Select the one correct answer.
	(a) The program will only print 5.
	(b) The program will only print 1 and 4, in that order.
	(c) The program will only print 1, 2, and 4, in that order.
	(d) The program will only print 1, 4, and 5, in that order.
	(e) The program will only print 1, 2, 4, and 5, in that order.
	(f) The program will only print 3 and 5, in that order.


2.	Which digits, and in what order, will be printed when the following program is compiled and run?
	public class D2DASMT_713
	{
		public static void main(String[] args)
		{
			try
			{
				throwAnException();
			}
			catch (InterruptedException e)
			{
				System.out.println("1");
				throw new RuntimeException();
			}
			catch (RuntimeException e)
			{
				System.out.println("2");
				return;
			}
			catch (Exception e)
			{
				System.out.println("3");
			}
			finally
			{
				System.out.println("4");
			}
			System.out.println("5");
		}

		static void throwAnException() throws InterruptedException
		{
			// InterruptedException is a direct subclass of Exception.
			throw new InterruptedException("Time for lunch.");
		}
	}
	Select the one correct answer.
	(a) The program will print 5.
	(b) The program will print 1 and 4, in that order.
	(c) The program will print 1, 2, and 4, in that order.
	(d) The program will print 1, 4, and 5, in that order.
	(e) The program will print 1, 2, 4, and 5, in that order.
	(f) The program will print 3 and 5, in that order.



4.	Given the below program:

	import java.io.*;
	import java.sql.*;
	class D2DASMT_715
	{
		// Multiple catches
	    public static void readFromFile() throws FileNotFoundException
	    {
	        throw new FileNotFoundException();
	    }
	    public static void readFromDatabase() throws SQLException
		{
	        throw new SQLException();
	    }
	    public static void main(String []args)
	    {
	        try
	        {
	            readFromFile();
	            readFromDatabase();
			}
			catch(FileNotFoundException || SQLException multie)
			{
	            System.out.println(multie);
	        }
	    }
	}
	Which one of the following options correctly describes the behavior of this program?
	(a) This program prints the following: java.io.FileNotFoundException.
	(b) This program prints the following: java.sql.SQLException.
	(c) This program prints the following: java.io.FileNotFoundException || java.sql.SQLException.
	(d) This program fails with compiler error(s).

//	D2DASMT_716
5.	Declare an interface called IFunction that has a method named evaluate that takes an int parameter and returns an int value.
	Create a class called Half that implements the IFunction interface. The implementation of the method evaluate() should return the value
    obtained by dividing the int argument by 2.
	In a client, create a method that takes an arbitrary array of int values as a parameter, and returns an array that has the same length,
    but the value of an element in the new array is half that of the value in the corresponding element in the array passed as the parameter.
    Let the implementation of this method create an instance of Half, and use this instance to calculate values for the array that is returned.


//	D2DASMT_717
6.	Rewrite the method that operated on arrays from the previous exercise: the method should now also accept a IFunction reference as an argument,
    and use	this argument instead of an instance of the Half class.
	Create a class called Print that implements the method evaluate() in the IFunction interface. This method simply prints the int value passed
    as argument, and returns this value.
	Now, write a program that creates an array of int values from 1 to 10, and does the following:
	- Prints the array using an instance of the Print class and the method described earlier.
	- Halves the values in the array and prints the values again, using the Half and Print classes, and the method described above.
